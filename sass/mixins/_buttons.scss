
@import "../custom";
@import "../../bower_components/bootstrap/scss/variables";
@import "../../bower_components/bootstrap/scss/mixins";

@import "colors";
@import "filters";
@import "transitions";

$btn-defaults: ( 
    padding-vertical: 4px, 
    padding-horizontal: 10px, 
    border-width: 2px,
    border-radius: 3px,
    box-shadow: none,
    box-hover-shadow: 0 8px 16px -5px rgba(0,0,0,0.3),
    sizes: (xs: 0.7, sm: 0.85, md: 1, lg: 1.5, xl: 2)
) !default;

@mixin btn {
    display: inline-block;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    
    -moz-appearance: none;
    -webkit-appearance: none;
    
    @if map-has-key($btn-defaults, 'box-shadow') {
        @include box-shadow(map-get($btn-defaults, 'box-shadow'));
    }

    @include btn-size(md);

    &.disabled,
    &:disabled {
        pointer-events: none;
        cursor: default;
        @include opacity(.65);
        @include box-shadow(none);
    }

    @include transition();

    &,
    &:active,
    &.active {
        &:focus,
        &.focus {
            outline: none;
            outline-offset: 0;
        }
    }

    &:hover, &:focus, &.focus {
        text-decoration: none;
    }

    &:active,
    &.active {
        background-image: none;
        outline: 0;
    }
 
    &:hover {
        @if map-has-key($btn-defaults, 'box-hover-shadow') {
            @include box-shadow(map-get($btn-defaults, 'box-hover-shadow'));
        }
    }    
}

@mixin btn-bordered {
    @if map-has-key($btn-defaults, 'border-radius') {
        border-radius: map-get($btn-defaults, 'border-radius');
    }
    @if map-has-key($btn-defaults, 'border-width') {
        border-width: map-get($btn-defaults, 'border-width');
        border-style: solid;
    }
}

@mixin btn-size($size: md) {
    $padding-vertical: map-get($btn-defaults, 'padding-vertical');    
    $padding-horizontal: map-get($btn-defaults, 'padding-horizontal');
    $sizes: map-get($btn-defaults, 'sizes');
    $mult: map-get($sizes, $size);    
    // @warn "mult #{$size} #{$mult}";    
    font-size: 1rem * $mult;    
    line-height: 1rem * $mult * $line-height-base;
    padding: $padding-vertical * $mult $padding-horizontal * $mult;
}

@mixin buttons() {
    // Future-proof disabling of clicks on `<a>` elements
    a.btn.disabled,
    fieldset[disabled] a.btn {
        pointer-events: none;
    }

    $sizes: map-get($btn-defaults, 'sizes');
    @each $size, $value in $sizes {    
        .btn-#{$size} {
            @include btn-size($size);
        }
    }

    .btn-block {
        display: block;
        width: 100%;
    }

    .btn-block + .btn-block {
        margin-top: $btn-block-spacing-y;
    }

    input[type="submit"],
    input[type="reset"],
    input[type="button"] {
        &.btn-block {
            width: 100%;
        }
    }
}

@mixin user-select($value: none) {
    user-select: $value;
}